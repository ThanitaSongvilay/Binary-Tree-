<html>
<head>
<title>main.py</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<style type="text/css">
.s0 { color: #cc7832;}
.s1 { color: #a9b7c6;}
.s2 { color: #6897bb;}
.s3 { color: #808080;}
</style>
</head>
<body bgcolor="#2b2b2b">
<table CELLSPACING=0 CELLPADDING=5 COLS=1 WIDTH="100%" BGCOLOR="#606060" >
<tr><td><center>
<font face="Arial, Helvetica" color="#000000">
main.py</font>
</center></td></tr></table>
<pre><span class="s0">class </span><span class="s1">Node:</span>
  <span class="s0">def </span><span class="s1">__init__(self</span><span class="s0">, </span><span class="s1">value</span><span class="s0">, </span><span class="s1">L</span><span class="s0">, </span><span class="s1">R):</span>
    <span class="s1">self.value = value</span>
    <span class="s1">self.L = L</span>
    <span class="s1">self.R = R</span>

<span class="s0">def </span><span class="s1">initNode(value):</span>
  <span class="s0">return </span><span class="s1">Node(value</span><span class="s0">, None, None</span><span class="s1">)</span>


<span class="s0">def </span><span class="s1">insert(tree</span><span class="s0">, </span><span class="s1">node):</span>
  <span class="s0">if </span><span class="s1">node.value &gt; tree.value </span><span class="s0">and </span><span class="s1">tree.R </span><span class="s0">is None</span><span class="s1">:</span>
    <span class="s1">tree.R = node</span>
  <span class="s0">if </span><span class="s1">node.value &lt; tree.value </span><span class="s0">and </span><span class="s1">tree.L </span><span class="s0">is None</span><span class="s1">:</span>
    <span class="s1">tree.L = node</span>
  <span class="s0">if </span><span class="s1">(tree.R </span><span class="s0">is not None and </span><span class="s1">tree.L </span><span class="s0">is None</span><span class="s1">) </span><span class="s0">and </span><span class="s1">tree.R.value &gt; node.value:</span>
    <span class="s1">insert(tree.R</span><span class="s0">, </span><span class="s1">node)</span>
  <span class="s0">if </span><span class="s1">(tree.L </span><span class="s0">is not None and </span><span class="s1">tree.R </span><span class="s0">is None</span><span class="s1">) </span><span class="s0">and </span><span class="s1">tree.L.value &lt; node.value:</span>
    <span class="s1">insert(tree.L</span><span class="s0">, </span><span class="s1">node)</span>
  <span class="s0">if </span><span class="s1">(tree.L </span><span class="s0">is not None and </span><span class="s1">tree.R </span><span class="s0">is None</span><span class="s1">) </span><span class="s0">and </span><span class="s1">tree.R.value &gt; node.value:</span>
    <span class="s1">insert(tree.R</span><span class="s0">, </span><span class="s1">node)</span>


<span class="s1">tree = initNode(</span><span class="s2">15</span><span class="s1">)</span>
<span class="s1">insert(tree</span><span class="s0">, </span><span class="s1">initNode(</span><span class="s2">18</span><span class="s1">))</span>
<span class="s1">insert(tree</span><span class="s0">, </span><span class="s1">initNode(</span><span class="s2">20</span><span class="s1">))</span>
<span class="s3">#insert(tree, initNode(16))</span>
<span class="s3">#insert(tree, initNode(17))</span>
<span class="s1">print(tree.value)</span>
<span class="s1">print(tree.R.value)</span>
<span class="s1">print(tree.R.R.value)</span>


<span class="s3">#while True:</span>
<span class="s3">#  userInput = 3</span>
<span class="s3">#  newNode = initNode(userInput)</span>
<span class="s3">#  insert(tree, newNode)</span>


<span class="s3">#FindNode</span>
<span class="s3">#Get (largest number, smallest number)</span>
<span class="s3">#Remove (can remove everything)</span>








</pre>
</body>
</html>
